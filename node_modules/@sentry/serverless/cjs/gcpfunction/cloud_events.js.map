{"version":3,"file":"cloud_events.js","sources":["../../../../src/gcpfunction/cloud_events.ts"],"sourcesContent":["import { captureException, flush, getCurrentHub } from '@sentry/node';\nimport { isThenable, logger } from '@sentry/utils';\n\nimport { domainify, getActiveDomain, proxyFunction } from '../utils';\nimport type { CloudEventFunction, CloudEventFunctionWithCallback, WrapperOptions } from './general';\n\nexport type CloudEventFunctionWrapperOptions = WrapperOptions;\n\n/**\n * Wraps an event function handler adding it error capture and tracing capabilities.\n *\n * @param fn Event handler\n * @param options Options\n * @returns Event handler\n */\nexport function wrapCloudEventFunction(\n  fn: CloudEventFunction | CloudEventFunctionWithCallback,\n  wrapOptions: Partial<CloudEventFunctionWrapperOptions> = {},\n): CloudEventFunctionWithCallback {\n  return proxyFunction(fn, f => domainify(_wrapCloudEventFunction(f, wrapOptions)));\n}\n\n/** */\nfunction _wrapCloudEventFunction(\n  fn: CloudEventFunction | CloudEventFunctionWithCallback,\n  wrapOptions: Partial<CloudEventFunctionWrapperOptions> = {},\n): CloudEventFunctionWithCallback {\n  const options: CloudEventFunctionWrapperOptions = {\n    flushTimeout: 2000,\n    ...wrapOptions,\n  };\n  return (context, callback) => {\n    const hub = getCurrentHub();\n\n    const transaction = hub.startTransaction({\n      name: context.type || '<unknown>',\n      op: 'function.gcp.cloud_event',\n      metadata: { source: 'component' },\n    });\n\n    // getCurrentHub() is expected to use current active domain as a carrier\n    // since functions-framework creates a domain for each incoming request.\n    // So adding of event processors every time should not lead to memory bloat.\n    hub.configureScope(scope => {\n      scope.setContext('gcp.function.context', { ...context });\n      // We put the transaction on the scope so users can attach children to it\n      scope.setSpan(transaction);\n    });\n\n    const activeDomain = getActiveDomain()!; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n\n    const newCallback = activeDomain.bind((...args: unknown[]) => {\n      if (args[0] !== null && args[0] !== undefined) {\n        captureException(args[0]);\n      }\n      transaction.finish();\n\n      void flush(options.flushTimeout)\n        .then(null, e => {\n          __DEBUG_BUILD__ && logger.error(e);\n        })\n        .then(() => {\n          callback(...args);\n        });\n    });\n\n    if (fn.length > 1) {\n      let fnResult;\n      try {\n        fnResult = (fn as CloudEventFunctionWithCallback)(context, newCallback);\n      } catch (err) {\n        captureException(err);\n        throw err;\n      }\n\n      if (isThenable(fnResult)) {\n        fnResult.then(null, err => {\n          captureException(err);\n          throw err;\n        });\n      }\n\n      return fnResult;\n    }\n\n    return Promise.resolve()\n      .then(() => (fn as CloudEventFunction)(context))\n      .then(\n        result => newCallback(null, result),\n        err => newCallback(err, undefined),\n      );\n  };\n}\n"],"names":["proxyFunction","domainify","getCurrentHub","getActiveDomain","captureException","flush","logger","isThenable"],"mappings":"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"}