{"version":3,"file":"awsservices.js","sources":["../../../src/awsservices.ts"],"sourcesContent":["import { getCurrentHub } from '@sentry/node';\nimport type { Integration, Span, Transaction } from '@sentry/types';\nimport { fill } from '@sentry/utils';\n// 'aws-sdk/global' import is expected to be type-only so it's erased in the final .js file.\n// When TypeScript compiler is upgraded, use `import type` syntax to explicitly assert that we don't want to load a module here.\nimport type * as AWS from 'aws-sdk/global';\n\ntype GenericParams = { [key: string]: any }; // eslint-disable-line @typescript-eslint/no-explicit-any\ntype MakeRequestCallback<TResult> = (err: AWS.AWSError, data: TResult) => void;\n// This interace could be replaced with just type alias once the `strictBindCallApply` mode is enabled.\ninterface MakeRequestFunction<TParams, TResult> extends CallableFunction {\n  (operation: string, params?: TParams, callback?: MakeRequestCallback<TResult>): AWS.Request<TResult, AWS.AWSError>;\n}\ninterface AWSService {\n  serviceIdentifier: string;\n}\n\n/** AWS service requests tracking */\nexport class AWSServices implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'AWSServices';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = AWSServices.id;\n\n  private readonly _optional: boolean;\n\n  public constructor(options: { optional?: boolean } = {}) {\n    this._optional = options.optional || false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const awsModule = require('aws-sdk/global') as typeof AWS;\n      fill(awsModule.Service.prototype, 'makeRequest', wrapMakeRequest);\n    } catch (e) {\n      if (!this._optional) {\n        throw e;\n      }\n    }\n  }\n}\n\n/** */\nfunction wrapMakeRequest<TService extends AWSService, TResult>(\n  orig: MakeRequestFunction<GenericParams, TResult>,\n): MakeRequestFunction<GenericParams, TResult> {\n  return function (this: TService, operation: string, params?: GenericParams, callback?: MakeRequestCallback<TResult>) {\n    let transaction: Transaction | undefined;\n    let span: Span | undefined;\n    const scope = getCurrentHub().getScope();\n    if (scope) {\n      transaction = scope.getTransaction();\n    }\n    const req = orig.call(this, operation, params);\n    req.on('afterBuild', () => {\n      if (transaction) {\n        span = transaction.startChild({\n          description: describe(this, operation, params),\n          op: 'http.client',\n        });\n      }\n    });\n    req.on('complete', () => {\n      if (span) {\n        span.finish();\n      }\n    });\n\n    if (callback) {\n      req.send(callback);\n    }\n    return req;\n  };\n}\n\n/** Describes an operation on generic AWS service */\nfunction describe<TService extends AWSService>(service: TService, operation: string, params?: GenericParams): string {\n  let ret = `aws.${service.serviceIdentifier}.${operation}`;\n  if (params === undefined) {\n    return ret;\n  }\n  switch (service.serviceIdentifier) {\n    case 's3':\n      ret += describeS3Operation(operation, params);\n      break;\n    case 'lambda':\n      ret += describeLambdaOperation(operation, params);\n      break;\n  }\n  return ret;\n}\n\n/** Describes an operation on AWS Lambda service */\nfunction describeLambdaOperation(_operation: string, params: GenericParams): string {\n  let ret = '';\n  if ('FunctionName' in params) {\n    ret += ` ${params.FunctionName}`;\n  }\n  return ret;\n}\n\n/** Describes an operation on AWS S3 service */\nfunction describeS3Operation(_operation: string, params: GenericParams): string {\n  let ret = '';\n  if ('Bucket' in params) {\n    ret += ` ${params.Bucket}`;\n  }\n  return ret;\n}\n"],"names":["fill","getCurrentHub"],"mappings":"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"}