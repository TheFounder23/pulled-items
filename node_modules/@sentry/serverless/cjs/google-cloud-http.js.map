{"version":3,"file":"google-cloud-http.js","sources":["../../../src/google-cloud-http.ts"],"sourcesContent":["// '@google-cloud/common' import is expected to be type-only so it's erased in the final .js file.\n// When TypeScript compiler is upgraded, use `import type` syntax to explicitly assert that we don't want to load a module here.\nimport type * as common from '@google-cloud/common';\nimport { getCurrentHub } from '@sentry/node';\nimport type { Integration, Span, Transaction } from '@sentry/types';\nimport { fill } from '@sentry/utils';\n\ntype RequestOptions = common.DecorateRequestOptions;\ntype ResponseCallback = common.BodyResponseCallback;\n// This interace could be replaced with just type alias once the `strictBindCallApply` mode is enabled.\ninterface RequestFunction extends CallableFunction {\n  (reqOpts: RequestOptions, callback: ResponseCallback): void;\n}\n\n/** Google Cloud Platform service requests tracking for RESTful APIs */\nexport class GoogleCloudHttp implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GoogleCloudHttp';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GoogleCloudHttp.id;\n\n  private readonly _optional: boolean;\n\n  public constructor(options: { optional?: boolean } = {}) {\n    this._optional = options.optional || false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const commonModule = require('@google-cloud/common') as typeof common;\n      fill(commonModule.Service.prototype, 'request', wrapRequestFunction);\n    } catch (e) {\n      if (!this._optional) {\n        throw e;\n      }\n    }\n  }\n}\n\n/** Returns a wrapped function that makes a request with tracing enabled */\nfunction wrapRequestFunction(orig: RequestFunction): RequestFunction {\n  return function (this: common.Service, reqOpts: RequestOptions, callback: ResponseCallback): void {\n    let transaction: Transaction | undefined;\n    let span: Span | undefined;\n    const scope = getCurrentHub().getScope();\n    if (scope) {\n      transaction = scope.getTransaction();\n    }\n    if (transaction) {\n      const httpMethod = reqOpts.method || 'GET';\n      span = transaction.startChild({\n        description: `${httpMethod} ${reqOpts.uri}`,\n        op: `http.client.${identifyService(this.apiEndpoint)}`,\n      });\n    }\n    orig.call(this, reqOpts, (...args: Parameters<ResponseCallback>) => {\n      if (span) {\n        span.finish();\n      }\n      callback(...args);\n    });\n  };\n}\n\n/** Identifies service by its base url */\nfunction identifyService(apiEndpoint: string): string {\n  const match = apiEndpoint.match(/^https:\\/\\/(\\w+)\\.googleapis.com$/);\n  return match ? match[1] : apiEndpoint.replace(/^(http|https)?:\\/\\//, '');\n}\n"],"names":["fill","getCurrentHub"],"mappings":";;;;;AAcA;AACA,MAAA,eAAA,EAAA;AACA;AACA;AACA;AACA,GAAA,OAAA,YAAA,GAAA,CAAA,IAAA,CAAA,EAAA,GAAA,kBAAA,CAAA;AACA;AACA;AACA;AACA;AACA,GAAA,MAAA,GAAA,CAAA,IAAA,CAAA,IAAA,GAAA,eAAA,CAAA,GAAA,CAAA;;AAIA,GAAA,WAAA,CAAA,OAAA,GAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AACA,IAAA,IAAA,CAAA,SAAA,GAAA,OAAA,CAAA,QAAA,IAAA,KAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA,GAAA,SAAA,GAAA;AACA,IAAA,IAAA;AACA;AACA,MAAA,MAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA,EAAA;AACA,MAAAA,UAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA,EAAA,SAAA,EAAA,mBAAA,CAAA,CAAA;AACA,KAAA,CAAA,OAAA,CAAA,EAAA;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AACA,QAAA,MAAA,CAAA,CAAA;AACA,OAAA;AACA,KAAA;AACA,GAAA;AACA,CAAA,CAAA,eAAA,CAAA,YAAA,EAAA,CAAA;AACA;AACA;AACA,SAAA,mBAAA,CAAA,IAAA,EAAA;AACA,EAAA,OAAA,WAAA,OAAA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,WAAA,CAAA;AACA,IAAA,IAAA,IAAA,CAAA;AACA,IAAA,MAAA,KAAA,GAAAC,oBAAA,EAAA,CAAA,QAAA,EAAA,CAAA;AACA,IAAA,IAAA,KAAA,EAAA;AACA,MAAA,WAAA,GAAA,KAAA,CAAA,cAAA,EAAA,CAAA;AACA,KAAA;AACA,IAAA,IAAA,WAAA,EAAA;AACA,MAAA,MAAA,UAAA,GAAA,OAAA,CAAA,MAAA,IAAA,KAAA,CAAA;AACA,MAAA,IAAA,GAAA,WAAA,CAAA,UAAA,CAAA;AACA,QAAA,WAAA,EAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,QAAA,EAAA,EAAA,CAAA,YAAA,EAAA,eAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA;AACA,IAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,CAAA,GAAA,IAAA,KAAA;AACA,MAAA,IAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,EAAA,CAAA;AACA,OAAA;AACA,MAAA,QAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA,SAAA,eAAA,CAAA,WAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,WAAA,CAAA,KAAA,CAAA,mCAAA,CAAA,CAAA;AACA,EAAA,OAAA,KAAA,GAAA,KAAA,CAAA,CAAA,CAAA,GAAA,WAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,CAAA;AACA;;;;"}